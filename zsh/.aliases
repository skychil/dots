#!/bin/bash
function :q { exit }
alias e='vim'
alias lf='lfcd'
alias ls='ls --color=auto'
alias la='ls -Fa --color=auto'
alias ll='ls -latrhF --color=auto'
alias pacman='sudo pacman'
alias wifi='iwctl'

# Directories
function - { cd '-' }
alias ..='cd ..'
alias ...="cd ../.."
alias ....="cd ../../.."
alias dots='cd ~/dots'
alias wdots='cd ~/wdots'

alias ga='git add'
alias gc='git commit --verbose'
alias gd='git diff -w'
alias gdm='git diff -w main'

alias gs='git status'

alias gst='git stash'
alias gsl='git stash list'
alias gss='git stash show'
alias gsp='git stash pop'
alias gsa='git stash apply'
alias gsd='git stash drop'

alias gl='git log --all --decorate --oneline --graph'
alias gf='git fetch'
alias gm='git merge'
alias gr='git rebase'
alias gri='git rebase --interactive'
alias gfm='git pull'
alias gfr='git pull --rebase'

alias grm='git rebase main'
alias grim='git rebase --interactive main'

alias gco='git checkout'
alias gcom='git checkout main'
alias gcob='git checkout -b'

# view local branches
alias gb='git branch'
# view remote branches
alias gbr='git branch --remote'
# delete branch
alias gbd='git branch -D'

alias gp='git push'
# push a newly created local branch to origin
alias gpb='git push --set-upstream origin $(git branch --show-current)'


# g=git
# gCO='gCo $(gCl)'
# gCT='gCt $(gCl)'
# gCa='git add $(gCl)'
# gCe='git mergetool $(gCl)'
# gCl='git --no-pager diff --name-only --diff-filter=U'
# gCo='git checkout --ours --'
# gCt='git checkout --theirs --'
# gR='git remote'
# gRa='git remote add'
# gRb=git-hub-browse
# gRl='git remote --verbose'
# gRm='git remote rename'
# gRp='git remote prune'
# gRs='git remote show'
# gRu='git remote update'
# gRx='git remote rm'
# gb='git branch'
# gbD='git branch --delete --force'
# gbL='git branch --all --verbose'
# gbM='git branch --move --force'
# gbR='git branch --move --force'
# gbS='git show-branch --all'
# gbV='git branch --verbose --verbose'
# gbX='git branch --delete --force'
# gba='git branch --all --verbose'
# gbc='git checkout -b'
# gbd='git branch --delete'
# gbl='git branch --verbose'
# gbm='git branch --move'
# gbr='git branch --move'
# gbs='git show-branch'
# gbv='git branch --verbose'
# gbx='git branch --delete'
# gc='git commit --verbose'
# gcF='git commit --verbose --amend'
# gcO='git checkout --patch'
# gcP='git cherry-pick --no-commit'
# gcR='git reset "HEAD^"'
# gcS='git commit -S --verbose'
# gcSF='git commit -S --verbose --amend'
# gcSa='git commit -S --verbose --all'
# gcSf='git commit -S --amend --reuse-message HEAD'
# gcSm='git commit -S --message'
# gcY='git cherry -v'
# gca='git commit --verbose --all'
# gcam='git commit --all --message'
# gcc='nocorrect gcc'
# gcf='git commit --amend --reuse-message HEAD'
# gcl=git-commit-lost
# gcm='git commit --message'
# gco='git checkout'
# gcp='git cherry-pick --ff'
# gcr='git revert'
# gcs='git show'
# gcsS='git show --pretty=short --show-signature'
# gcy='git cherry -v --abbrev'
# gd='git ls-files'
# gdc='git ls-files --cached'
# gdi='git status --porcelain --short --ignored | sed -n "s/^!! //p"'
# gdk='git ls-files --killed'
# gdm='git ls-files --modified'
# gdu='git ls-files --other --exclude-standard'
# gdx='git ls-files --deleted'
# get='curl --continue-at - --location --progress-bar --remote-name --remote-time'
# gf='git fetch'
# gfa='git fetch --all'
# gfc='git clone'
# gfcr='git clone --recurse-submodules'
# gfm='git pull'
# gfma='git pull --autostash'
# gfr='git pull --rebase'
# gfra='git pull --rebase --autostash'
# gg='git grep'
# ggL='git grep --files-without-matches'
# ggi='git grep --ignore-case'
# ggl='git grep --files-with-matches'
# ggv='git grep --invert-match'
# ggw='git grep --word-regexp'
# giA='git add --patch'
# giD='git diff --no-ext-diff --cached --word-diff'
# giI='git update-index --no-assume-unchanged'
# giR='git reset --patch'
# giX='git rm -rf --cached'
# gia='git add'
# gid='git diff --no-ext-diff --cached'
# gii='git update-index --assume-unchanged'
# gir='git reset'
# gist='nocorrect gist'
# giu='git add --update'
# gix='git rm -r --cached'
# gl='git log --topo-order --pretty=format:"${_git_log_medium_format}"'
# glS='git log --show-signature'
# glb='git log --topo-order --pretty=format:"${_git_log_brief_format}"'
# glc='git shortlog --summary --numbered'
# gld='git log --topo-order --stat --patch --full-diff --pretty=format:"${_git_log_medium_format}"'
# glg='git log --topo-order --graph --pretty=format:"${_git_log_oneline_format}"'
# glo='git log --topo-order --pretty=format:"${_git_log_oneline_format}"'
# globurl='noglob urlglobber '
# gls='git log --topo-order --stat --pretty=format:"${_git_log_medium_format}"'
# gm='git merge'
# gmC='git merge --no-commit'
# gmF='git merge --no-ff'
# gma='git merge --abort'
# gmt='git mergetool'
# gp='git push'
# gpA='git push --all && git push --tags'
# gpF='git push --force'
# gpa='git push --all'
# gpc='git push --set-upstream origin "$(git-branch-current 2> /dev/null)"'
# gpf='git push --force-with-lease'
# gpp='git pull origin "$(git-branch-current 2> /dev/null)" && git push origin "$(git-branch-current 2> /dev/null)"'
# gpt='git push --tags'
# gr='git rebase'
# gra='git rebase --abort'
# grc='git rebase --continue'
# grep='nocorrect grep --color=auto'
# gri='git rebase --interactive'
# grs='git rebase --skip'
# gs='git stash'
# gsL=git-stash-dropped
# gsS='git stash save --patch --no-keep-index'
# gsX=git-stash-clear-interactive
# gsa='git stash apply'
# gsd='git stash show --patch --stat'
# gsl='git stash list'
# gsp='git stash pop'
# gsr=git-stash-recover
# gss='git stash save --include-untracked'
# gsw='git stash save --include-untracked --keep-index'
# gsx='git stash drop'
# gt='git tag'
# gtl='git tag -l'
# gts='git tag -s'
# gtv='git verify-tag'
# gwC='git clean -f'
# gwD='git diff --no-ext-diff --word-diff'
# gwR='git reset --hard'
# gwS='git status --ignore-submodules=${_git_status_ignore_submodules}'
# gwX='git rm -rf'
# gwc='git clean -n'
# gwd='git diff --no-ext-diff'
# gwr='git reset --soft'
# gws='git status --ignore-submodules=${_git_status_ignore_submodules} --short'
# gwx='git rm -r'

